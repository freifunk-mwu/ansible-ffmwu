#
# {{ ansible_managed }}
#

[respondd]
enable           = true
synchronize      = "1m"
collect_interval = "1m"

[respondd.sites.{{ site_code }}]
domains = [
{% for mesh in meshes %}
{% if mesh.aliases is defined %}
{% for domain, name in mesh.aliases.items() %}
  "{{ domain }}",
{% endfor %}
{% endif %}
  "{{ mesh.domain_code }}"{% if not loop.last %},
{% else %}

{% endif %}
{% endfor %}
]

[[respondd.interfaces]]
ifname = "loopback"
multicast_address = "ff02::2:1001"
{% for network in my_wireguard_networks %}
[[respondd.interfaces]]
ifname = "wg-{{ network.remote[:11] }}"
multicast_address = "ff02::2:1001"
{% endfor %}
{% for mesh in meshes %}
[[respondd.interfaces]]
ifname = "{{mesh.id}}br"
multicast_address = "ff05::2:1001"
[[respondd.interfaces]]
ifname = "{{mesh.id}}br"
multicast_address = "ff02::2:1001"
{% endfor %}

[nodes]
state_path = "/var/lib/yanic/state.json"
prune_after = "30d"
save_interval = "5s"
offline_after = "10m"

[[nodes.output.meshviewer-ffrgb]]
enable = true
path = "/var/lib/yanic/data/meshviewer.json"
[nodes.output.meshviewer-ffrgb.filter]
no_owner = true
{% if yanic_blocklist is defined %}
blocklist = [{% for node in yanic_blacklist %}"{{ node }}"{% if not loop.last %},{% endif %}{% endfor %}]
{% endif %}

[[nodes.output.meshviewer]]
enable = true
version = 2
nodes_path = "/var/lib/yanic/data/nodes.json"
graph_path = "/var/lib/yanic/data/graph.json"
[nodes.output.meshviewer.filter]
no_owner = true

[[nodes.output.nodelist]]
enable = true
path = "/var/lib/yanic/data/nodelist.json"

[database]
delete_after    = "30d"
delete_interval = "1h"

[[database.connection.influxdb]]
enable   = true
address  = "http://localhost:8086"
database = "yanic"
username = ""
password = ""

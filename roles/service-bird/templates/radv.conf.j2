{% for mesh in meshes %}
protocol radv radv_{{ mesh.id }} {
	interface "{{ mesh.id }}br" {
		max ra interval {{ mesh.radvd.maxrtradvinterval }};

{% for prefix in mesh.ipv6_ula %}
		prefix {{ prefix | ansible.utils.ipaddr('net') | ansible.utils.ipsubnet(64, 0) | ansible.utils.ipaddr('subnet') }} {
			valid lifetime {{ mesh.radvd.advvalidlifetime }};
			preferred lifetime {{ mesh.radvd.advpreferredlifetime }};
		};
{% endfor %}

{% for prefix in mesh.ipv6_public %}
		prefix {{ prefix | ansible.utils.ipaddr('net') | ansible.utils.ipsubnet(64, 0) | ansible.utils.ipaddr('subnet') }} {
			skip yes;
		};
{% endfor %}

{% for prefix in mesh_gw_prefixes[mesh.id].ipv6_public %}
		prefix {{ prefix | ansible.utils.ipaddr('net') | ansible.utils.ipsubnet(64, 0) | ansible.utils.ipaddr('subnet') }} {
			valid lifetime {{ mesh.radvd.advvalidlifetime }};
			preferred lifetime {{ mesh.radvd.advpreferredlifetime }};
		};
{% endfor %}

		rdnss {
{% for prefix in mesh.ipv6_ula %}
			ns {{ prefix | ansible.utils.ipaddr('net') | ansible.utils.ipsubnet(64, 0) | ansible.utils.ipaddr(magic) | ansible.utils.ipaddr('address') }};
{% endfor %}
		};

{% if mesh.dnssl is defined %}
		dnssl {
{% for dnssl in mesh.dnssl %}
			domain "{{ dnssl }}";
{% endfor %}
		};
{% endif %}

		link mtu {{ mesh.iface_mtu }};
	};
}
{% if not loop.last %}

{% endif %}
{% endfor %}

---
- name: ensure parsoid apt key is present
  apt_key:
    state: present
    id: AF380A3036A03444
    url: "http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3b49082883588699e29b866baf380a3036a03444"

- name: ensure parsoid apt repo is present
  apt_repository:
    state: present
    repo: "deb https://releases.wikimedia.org/debian jessie-mediawiki main"
    update_cache: yes
    filename: parsoid

- name: install packages
  package:
    name: "{{ item }}"
    state: present
  loop:
    - composer
    - parsoid

- name: write parsoid config
  template:
    src: "parsoid.conf.j2"
    dest: "/etc/mediawiki/parsoid/config.yaml"
    mode: 0644
    owner: root
    group: root
  notify: restart parsoid

- name: write /etc/default/parsoid
  template:
    src: "defaults_parsoid.j2"
    dest: "/etc/default/parsoid"
    mode: 0644
    owner: root
    group: root
  notify: restart parsoid

- name: configure systemd unit parsoid
  systemd:
    name: parsoid
    state: started
    enabled: yes

- name: "create {{ mediawiki_path }}"
  file:
    path: "{{ mediawiki_path }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'

- name: download and extract mediawiki
  unarchive:
    creates: "{{ mediawiki_path }}/mediawiki-{{ mediawiki_version }}"
    src: "{{ mediawiki_src }}"
    dest: "{{ mediawiki_path }}"
    remote_src: yes
    owner: www-data
    group: www-data

- name: create mediawiki symlinks
  file:
    src: "mediawiki-{{ mediawiki_version }}"
    dest: "{{ mediawiki_path }}/current"
    state: link

- name: get urls for mediawiki extensions (tarballs)
  uri:
    url: "https://gerrit.wikimedia.org/r/projects/mediawiki%2Fextensions%2F{{ item.name }}/branches/REL{{ mediawiki_version_major | replace('.','_') }}"
    return_content: yes
  register: extension_urls
  loop: "{{ mediawiki_extensions }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.url is defined and item.url == "extdist"
  tags: test

- name: get urls for mediawiki skins (tarballs)
  uri:
    url: "https://gerrit.wikimedia.org/r/projects/mediawiki%2Fskins%2F{{ item.name }}/branches/REL{{ mediawiki_version_major | replace('.','_') }}"
    return_content: yes
  register: skin_urls
  loop: "{{ mediawiki_skins }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.url is defined and item.url == "extdist"
  tags: test

- name: install mediawiki extensions (tarballs)
  unarchive:
    creates: "{{ mediawiki_path }}/current/extensions/{{ item.item.name }}"
    src: "https://extdist.wmflabs.org/dist/extensions/{{ item.item.name }}-REL{{ mediawiki_version_major | replace('.','_') }}-{{ (item.content.split('\n')[1] | from_json).revision[:7] }}.tar.gz"
    dest: "{{ mediawiki_path }}/current/extensions/"
    remote_src: yes
    owner: www-data
    group: www-data
  when: item.skipped is not defined
  loop: "{{ extension_urls.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: install mediawiki skins (tarballs)
  unarchive:
    creates: "{{ mediawiki_path }}/current/skins/{{ item.item.name }}"
    src: "https://extdist.wmflabs.org/dist/skins/{{ item.item.name }}-REL{{ mediawiki_version_major | replace('.','_') }}-{{ (item.content.split('\n')[1] | from_json).revision[:7] }}.tar.gz"
    dest: "{{ mediawiki_path }}/current/skins/"
    remote_src: yes
    owner: www-data
    group: www-data
  when: item.skipped is not defined
  loop: "{{ skin_urls.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: write composer.local.json
  template:
    src: "composer.local.json.j2"
    dest: "{{ mediawiki_path }}/current/composer.local.json"
    mode: 0644

- name: install mediawiki extensions (composer)
  composer:
    command: update
    no_dev: true
    working_dir: "{{ mediawiki_path }}/current"

- name: write mediawiki settings
  template:
    src: "LocalSettings.php.j2"
    dest: "{{ mediawiki_path }}/current/LocalSettings.php"
    mode: 0644

- name: copy favicon
  copy:
    src: "favicon.ico"
    dest: "{{ mediawiki_path }}/current/favicon.ico"

- name: copy mwu logo
  copy:
    src: "{{ mediawiki_logo }}"
    dest: "{{ mediawiki_path }}/current/resources/assets/{{ mediawiki_logo }}"

- name: fix mediawiki permissions
  file:
    path: "{{ mediawiki_path }}/mediawiki-{{ mediawiki_version }}"
    owner: www-data
    group: www-data
    recurse: yes

- name: write mediawiki vhost
  template:
    src: mediawiki_vhost.conf.j2
    dest: /etc/nginx/conf.d/mediawiki.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx

- name: add maintenance cronjob
  cron:
    name: "mediawiki maintenance"
    cron_file: "mediawiki"
    user: "www-data"
    special_time: daily
    job: "/usr/bin/php {{ mediawiki_path }}/current/maintenance/runJobs.php"

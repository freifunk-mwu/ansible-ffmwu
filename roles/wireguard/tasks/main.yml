---
- name: Gather my own WireGuard networks.
  set_fact:
    my_wireguard_networks: "{% set _my_nets = [] %}\
                            {% for net in wireguard_networks %}\
                            {% if inventory_hostname_short in net.peers %}\
                            {% do _my_nets.append(net) %}\
                            {% set remote = net.peers | reject('equalto', inventory_hostname_short) | list () | first %}\
                            {% set remote_hostname = remote + '.freifunk-mwu.de' %}\
                            {% set remote_magic = hostvars[remote_hostname]['magic'] %}\
                            {% do net.update({'remote': remote, 'remote_hostname': remote_hostname, 'remote_magic': remote_magic}) %}\
                            {% endif %}\
                            {% endfor %}\
                            {{ _my_nets }}"

- name: Install WireGuard packages.
  package:
    name: "{{ wireguard_packages }}"
    state: "present"

- name: Register the WireGuard public + private key.
  set_fact:
    wireguard_public_key: "{{ lookup('passwordstore', 'wireguard/' + inventory_hostname_short + ' subkey=public') }}"
    wireguard_private_key: "{{ lookup('passwordstore', 'wireguard/' + inventory_hostname_short + ' subkey=private') }}"
  no_log: False

- name: Write the wireguard.netdev
  template:
    src: "wireguard.netdev.j2"
    dest: "/etc/systemd/network/wg-{{ item.remote[:11] }}.netdev"
    owner: root
    group: systemd-network
    mode: 0640
  loop: "{{ my_wireguard_networks }}"
  loop_control:
    label: "{{ item.remote }}"
  notify: restart networkd

- name: Write the wireguard.network
  template:
    src: "wireguard.network.j2"
    dest: "/etc/systemd/network/wg-{{ item.remote[:11] }}.network"
    owner: "root"
    group: "root"
    mode: "0644"
  loop: "{{ my_wireguard_networks }}"
  loop_control:
    label: "{{ item.remote }}"
  notify: restart networkd

- name: flush handlers
  meta: flush_handlers
